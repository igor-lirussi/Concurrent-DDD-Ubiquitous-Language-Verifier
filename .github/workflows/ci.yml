name: Clone and Build Repository
on: #TRIGGERS
    push: # On  push
        branches: #on brnaches
            - main # main one

jobs:
    BuildJob:
        runs-on: ubuntu-latest # Operating system selection
        env: # Environment can be controlled at the job or step level
            TERM: dumb #no prints
        steps:
            - name: Clone Repo with Checkout # first step
              uses: actions/checkout@v2 # clones repo! Action implemented in this repository, tag "2"
            - name: Install JDK
              uses: joschi/setup-jdk@v2.3.0 # download jdk! Action implemented in repository "joschi/setup-jdk" tag "2.3.0"
              with: # Actions parameters (action name omitted)
                java-version: 8
            - name: Build and Check :P #cusom action
              run: ./gradlew clean build #performs gradlew build, it check if present checkstyle, it runs test with junit, it assembles the jar
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                name: Artifacts
                path: ./build/libs/Concurrent-DDD-Ubiquitous-Language-Verifier.jar
    UploadRelease:
        needs: [BuildJob]
        runs-on: ubuntu-latest
        steps:
            - name: Clone git repo
              uses: actions/checkout@v3
            - name: Download Artifacts
              uses: actions/download-artifact@v2
              with:
                name: Artifacts
            - name: Extract Date
              shell: bash
              id: extract_date
              run: |
                echo "::set-output name=DATE::Release_$(cat VERSION.md)_$(date +%F_%H-%M)"
            - name: Print Output Step
              run: echo ${{ steps.extract_date.outputs.DATE }}
            - name: Deploy
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                git config --global user.name github-actions
                git config --global user.email github-actions@github.com
                TAG="${{ steps.extract_date.outputs.DATE }}"
                echo $TAG
                MSG="${{ github.event.head_commit.message }}"
                echo $MSG
                hub release create -m "$TAG" "$TAG" || true
                tree
                ls
                FILE="./Concurrent-DDD-Ubiquitous-Language-Verifier.jar"
                gh release upload "$TAG" "$FILE" --clobber
    TelegramJobFailure:
        needs: [UploadRelease] #when finished this job
        if: failure() # if fails
        runs-on: ubuntu-latest
        steps:
        - name: send custom message with args
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: |
                ${{ github.event_name }} event,
                on github.com/${{ github.repository }}, 
                by ${{ github.actor }}.
                /!\ FAILED /!\
            disable_web_page_preview: true
